[gd_scene load_steps=9 format=3 uid="uid://dub12avp0i8ud"]

[ext_resource type="Script" path="res://components/weapon/wand.gd" id="1_r2q1q"]

[sub_resource type="GDScript" id="GDScript_uhq8u"]
script/source = "extends StateMachine

func _ready() -> void:
	super._ready()

"

[sub_resource type="GDScript" id="GDScript_dpm7t"]
script/source = "extends State

var wand: Wand

func _ready() -> void:
	pass

func enter() -> void:
	wand = owner as Wand
	print(\"%s 进入 Idle 状态\" % wand.name)
	wand.cast = wand.max_cast
	print(\"%s 初始化 cast, 当前剩余: [%d/%d]\" % [wand.name, wand.cast, wand.max_cast])
	wand.energe = wand.max_energe
	print(\"%s 初始化 energe, 当前剩余: [%d/%d]\" % [wand.name, wand.energe, wand.max_energe])
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	if wand.trigger_pressed:
		emit_signal(\"finished\", \"BeforeUse\")
		
func physics_update(delta: float) -> void:
	if not is_active():
		return
	if wand.energe < wand.max_energe:
		# 计算在这个特定帧的时间内应当恢复多少 energe
		# delta 的单位是秒。如果delta是0.016秒（约等于60帧/秒），
		# 那么每帧应该恢复的 energe 为 10 * 0.016 = 0.16 点。
		wand.energe += wand.energe_recharge_speed * delta
		wand.energe = min(wand.energe, wand.max_energe)
	
func exit() -> void:
	print(\"%s 退出 Idle 状态\" % wand.name)
	super.exit()

func _exit_tree() -> void:
	pass

"

[sub_resource type="GDScript" id="GDScript_om8ju"]
script/source = "extends State

var wand: Wand

func _ready() -> void:
	pass

func enter() -> void:
	wand = owner as Wand
	print(\"%s -> BeforeUse\" % wand.name)
	#if wand.remaining_cast > 0:
		
	# 判断当前武器是否可以使用
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	
func exit() -> void:
	super.exit()

func _exit_tree() -> void:
	pass

"

[sub_resource type="GDScript" id="GDScript_36jsr"]
script/source = "extends State

func _ready() -> void:
	pass

func enter() -> void:
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	
func exit() -> void:
	super.exit()

func _exit_tree() -> void:
	pass

"

[sub_resource type="GDScript" id="GDScript_43gfs"]
script/source = "extends State

func _ready() -> void:
	pass

func enter() -> void:
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	
func exit() -> void:
	super.exit()

func _exit_tree() -> void:
	pass

"

[sub_resource type="GDScript" id="GDScript_jxwcj"]
script/source = "extends State

func _ready() -> void:
	pass

func enter() -> void:
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	
func exit() -> void:
	super.exit()

func _exit_tree() -> void:
	pass

"

[sub_resource type="GDScript" id="GDScript_w52mh"]
script/source = "extends State

func _ready() -> void:
	pass

func enter() -> void:
	super.enter()

func update(_delta: float) -> void:
	if not is_active():
		return
	
func exit() -> void:
	super.exit()

func _exit_tree() -> void:
	pass

"

[node name="Wand" type="Node2D"]
script = ExtResource("1_r2q1q")

[node name="Slots" type="Node" parent="."]

[node name="StateMachine" type="Node" parent="." node_paths=PackedStringArray("start_state")]
script = SubResource("GDScript_uhq8u")
start_state = NodePath("Idle")

[node name="Idle" type="Node" parent="StateMachine"]
script = SubResource("GDScript_dpm7t")

[node name="BeforeUse" type="Node" parent="StateMachine"]
script = SubResource("GDScript_om8ju")

[node name="Use" type="Node" parent="StateMachine"]
script = SubResource("GDScript_36jsr")

[node name="DelayBetweenUses" type="Node" parent="StateMachine"]
script = SubResource("GDScript_43gfs")

[node name="AfterUser" type="Node" parent="StateMachine"]
script = SubResource("GDScript_jxwcj")

[node name="Reload" type="Node" parent="StateMachine"]
script = SubResource("GDScript_w52mh")

[node name="Sprite2D" type="Sprite2D" parent="."]
