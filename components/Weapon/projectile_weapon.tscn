[gd_scene load_steps=3 format=3 uid="uid://b2e4ayxd7lf15"]

[ext_resource type="PackedScene" uid="uid://bmmn2owanxfvn" path="res://components/weapon/weapon.tscn" id="1_6v2sm"]

[sub_resource type="GDScript" id="GDScript_6vy5e"]
script/source = "class_name ProjectileWeapon extends Weapon

## 投射类武器的弹道类型
enum ProjectileTrajectory {
	## 直线弹道
	LINEAR,
	## 抛物线弹道
	PARABOLIC,         
	## 自动追踪弹道
	HOMING,            
	## 反弹弹道
	BOUNCING,          
	## 分裂弹道
	SPLITTING,         
	## 激光（瞬时命中）
	LASER,             
	## 范围效果（例如爆炸）
	AREA_OF_EFFECT,    
	## 受重力影响的弹道
	GRAVITY_AFFECTED   
}

@export_range(0.1, 10, 0.1) var time_between_used: float = 1

## 【投射物武器】可以发射的【投射物】
@export var projectiles: Array[PackedScene] = []
## 每次发射的【投射物】数量
@export var projectiles_per_shot := 1
## 武器弹道
@export var projectile_trajectory: ProjectileTrajectory

func weapon_use(direction: Vector2) -> void :
	print(\"Weapon use\")
	super.weapon_use(direction)
	
	for i in range(projectiles_per_shot):
		_spawn_projectile(i, projectiles_per_shot, direction)
		
func _spawn_projectile(index: int, total: int, direction: Vector2) -> void:
	pass
	#if GameManager.projectile_scenes.has(projectile[index]):
		#var scene := GameManager.projectile_scenes.get(projectile[index]) as PackedScene
		#var p := scene.instantiate() as Projectile
		#p.direction = direction
		#p.position = GameManagerlevel_jsonl.to_local(spawn_position)
		#
		#GameManagerlevel_jsonl.add_child(p)
		
"

[node name="ProjectileWeapon" instance=ExtResource("1_6v2sm")]
script = SubResource("GDScript_6vy5e")
